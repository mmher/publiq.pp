module BlockchainMessage
{
    class Coin
    {
        UInt64 whole
        UInt64 fraction
    }
    ///
    //  core functions
    ///
    class Broadcast
    {
        UInt64 echoes
        Object package
    }

    ///
    //  core entities
    ///
    class Transaction
    {
        TimePoint creation
        TimePoint expiry
        Coin fee
        Object action  //  Transfer, File or Page
    }

    class SignedTransaction
    {
        Transaction transaction_details
        String authority
        String signature
    }

    class BlockHeader
    {
        UInt64 block_number
        UInt64 delta
        UInt64 c_sum
        UInt64 c_const
        String prev_hash
        TimePoint time_signed
    }

    class Block
    {
        BlockHeader header
        Array Reward rewards
        Array SignedTransaction signed_transactions
    }

    class SignedBlock
    {
        Block block_details
        String authority
        String signature
    }

    ///
    enum RewardType
    {
        initial
        miner
        channel
        storage
        author
    }

    ///
    // action log info
    ///
    class RewardLog
    {
        String to
        Coin amount
        RewardType reward_type
    }

    class TransactionLog
    {
        Coin fee
        Object action
        String transaction_hash
        UInt64 transaction_size
        TimePoint time_signed
    }

    class BlockLog
    {
        String authority
        String block_hash
        UInt64 block_number
        UInt64 block_size
        TimePoint time_signed
        Array RewardLog rewards
        Array TransactionLog transactions
    }

    ///
    //  blockchain transactions
    ///
    class Reward
    {
        String to
        Coin amount
        RewardType reward_type
    }

    class Transfer
    {
        String from
        String to
        Coin amount
        String message
    }

    class File
    {
        String author
        String uri
    }

    class Content
    {
        String channel
        Array String file_uris
    }

    enum NodeType
    {
        miner
        channel
        storage
    }

    class Contract
    {
        String owner
        NodeType role
    }

    class AddressInfo
    {
        String node_id
        IPAddress ip_address
    }

    class ArticleInfo
    {
        String uri
        String author
        String channel
    }

    class ContentInfo
    {
        String uri
        String storage
    }

    class StatItem
    {
        String node
        //String content
        UInt64 passed
        UInt64 failed
    }

    class StatInfo
    {
        String hash
        Array StatItem items
    }

    //  request/response
    class DigestRequest { Object package }
    class Digest
    {
        String base58_hash
        Object package
    }

    class LoggedTransactionsRequest
    { 
        UInt64 start_index
        UInt64 max_count
    }
    class LoggedTransactions
    {
        Array LoggedTransaction actions
    }
    class LoggedTransaction
    {
        LoggingType logging_type
        UInt64 index
        Object action // BlockLog or TransactionLog
    }
    enum LoggingType {apply revert}

    class MasterKeyRequest {}
    class MasterKey { String master_key }

    class KeyPairRequest
    {
        String master_key
        UInt64 index
    }
    class KeyPair
    {
        String master_key
        UInt64 index
        String public_key
        String private_key
    }

    class SignRequest
    {
        String private_key
        Object package
    }
    class Signature
    {
        String public_key
        String signature
        Object package
    }

    class SyncInfo
    {
        UInt64 number
        UInt64 c_sum
    }

    class SyncRequest {}

    class SyncResponse
    {
        UInt64 number
        UInt64 c_sum
        Object sync_info
    }

    class BlockHeaderRequest
    {
        UInt64 blocks_from
        UInt64 blocks_to
    }
    class BlockHeaderResponse
    {
        Array BlockHeader block_headers
    }

    class BlockchainRequest
    {
        UInt64 blocks_from
        UInt64 blocks_to
    }
    class BlockchainResponse
    {
        Array SignedBlock signed_blocks
    }

    ///
    //  response codes
    ///
    class Done {}
    class InvalidPublicKey { String public_key }
    class InvalidPrivateKey { String private_key }
    class InvalidSignature { Signature details }
    class InvalidAuthority
    {
        String authority_provided
        String authority_required
    }
    class NotEnoughBalance
    {
        Coin balance
        Coin spending
    }
    class TooLongString
    {
        String used_string
        UInt64 max_length
    }
    class FileNotFound{ String uri }
    class RemoteError { String message }

    //  distributed storage related
    class StorageFile
    {
        String mime_type
        String data
    }

    class StorageFileAddress
    {
        String uri
        String node
    }

    class GetStorageFile
    {
        String uri
        String node
    }
        
    //  ip address information
    class IPDestination
    {
        UInt16 port
        String address
    }

    class IPAddress
    {
        IPType ip_type
        IPDestination local
        IPDestination remote
    }

    enum IPType {any ipv4 ipv6}

    class Ping
    {}

    class Pong
    {
        String nodeid
        TimePoint stamp
        String signature
    }

    // master-slave requests
    class TaskRequest
    {
        Object package
        UInt64 task_id
        String signature
        TimePoint time_signed
    }

    class TaskResponse 
    {
        Object package
        UInt64 task_id
    }
}
////1
